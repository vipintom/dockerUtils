x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-size: "5m"
      max-file: "2"
      compress: "true"

x-monitoring-service: &monitoring-service
  <<: *logging
  networks:
    - monitoring-network

services:
  portainer:
    <<: *monitoring-service
    extends:
      file: ./portainer/docker-compose.yml
      service: portainer

  watchtower:
    <<: *monitoring-service
    extends:
      file: ./watchtower/docker-compose.yml
      service: watchtower

  beszel-hub:
    <<: *monitoring-service
    extends:
      file: ./beszel/docker-compose.yml
      service: beszel-hub

  beszel-agent:
    <<: *logging
    extends:
      file: ./beszel/docker-compose.yml
      service: beszel-agent

  kuma:
    <<: *monitoring-service
    extends:
      file: ./kuma/docker-compose.yml
      service: uptime-kuma

  caddy:
    <<: *logging
    environment:
      CROWDSEC_API_KEY: "${CROWDSEC_API_KEY}"
    extends:
      file: ./caddy/docker-compose.yml
      service: caddy

  crowdsec:
    <<: *logging
    extends:
      file: ./caddy/docker-compose.yml
      service: crowdsec

  restarter:
    <<: *logging
    container_name: restarter
    image: index.docker.io/deduard/tools:restart-notifier-latest
    restart: unless-stopped
    environment:
      RESTART_CONTAINERS: "${RESTART_CONTAINERS}"
      RUN_ON_STARTUP: "${RUN_ON_STARTUP}"
      CRON_SCHEDULE: "${CRON_SCHEDULE}"
      CYCLE_PERIOD: "${CYCLE_PERIOD}"
      TZ: "${TZ}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  monitoring-network:
    driver: bridge
  caddy-shared-network:
    external: true

volumes:
  beszel_socket:
  caddy:
  caddy_config:
  prometheus_data:
  grafana_data:
  loki_data:
  crowdsec_db:
  crowdsec_config:
